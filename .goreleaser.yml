# Release Configuration
project_name: video-manager
report_sizes: true

before:
  hooks:
    - go mod download
    - go mod tidy
    - go run github.com/securego/gosec/v2/cmd/gosec@latest -quiet ./...
    - go run github.com/go-critic/go-critic/cmd/gocritic@latest check -enableAll ./...
    - go run github.com/google/osv-scanner/cmd/osv-scanner@latest -r .
    - go test -race .

builds:
  - id: default
    env: [CGO_ENABLED=0]
    goos: [linux, windows, darwin]
    goarch: [amd64, arm64]

upx:
  - ids: [default]
    enabled: true
    compress: best
    lzma: true
    brute: true
    goos: [linux, windows] # skip darwin (macOS 13.x Ventura is not support now)
    goarch: [amd64, arm64]

archives:
  - format_overrides:
      - goos: windows
        format: zip
    files: [LICENSE, README.md]

release:
  ids: [default]

  draft: true
  replace_existing_draft: true
  target_commitish: "{{ .Commit }}"
  prerelease: auto
  mode: replace
  disable: false
  skip_upload: false

  # Release body
  header: |
    ## The `{{ .Tag }}` release
  footer: |
    ## Install or update

    For native Go installation (any platforms):

    ```console
    go install github.com/caffeine-addictt/video-manager@latest
    ```

    > ðŸ’¡ Note: See the [`Wiki page`][wiki_url] to understand the project structure and get general recommendations.

    ## Your help to improve project

    I'd be truly grateful for help with:

    - Creating tests (and/or benchmarks) for code.
    - Improving existing functions, structs, or tests.
    - Feature requests with interesting functions that would be good to add.

    Your PRs & issues are welcome! Thanks :D

    [wiki_url]: https://github.com/caffeine-addictt/video-manager/wiki

checksum:
  name_template: "checksums.txt"

changelog:
  sort: asc
  abbrev: -1
  filters:
    exclude: ["^*.md", "^*.ya?ml"]
  groups:
    - title: Features
      regexp: '^.*?feat(\(.+\))??!?:.+$'
      order: 0
    - title: Bug fixes
      regexp: '^.*?fix(\(.+\))??!?:.+$'
      order: 1
    - title: Improvements
      regexp: '^.*?(perf|refactor)(\(.+\))??!?:.+$'
      order: 2
    - title: Security issues
      regexp: ^.*?(S|s)ecurity.*?$
      order: 4
    - title: Others
      order: 999
