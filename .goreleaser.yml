# Release Configuration
project_name: video-manager
report_sizes: true

before:
  hooks:
    - go mod download
    - go mod tidy
    - go run github.com/securego/gosec/v2/cmd/gosec@latest -quiet ./...
    - go run github.com/go-critic/go-critic/cmd/gocritic@latest check -enableAll ./...
    - go run github.com/google/osv-scanner/cmd/osv-scanner@latest -r .
    - go test -race .

builds:
  - id: default
    env: [CGO_ENABLED=0]
    goos: [linux, windows, darwin]
    goarch: [amd64, arm64]

upx:
  - ids: [default]
    enabled: true
    compress: best
    lzma: true
    brute: true
    goos: [linux, windows] # skip darwin (macOS 13.x Ventura is not support now)
    goarch: [amd64, arm64]

archives:
  - format_overrides:
      - goos: windows
        format: zip
    files: [LICENSE, README.md]

nfpms:
  - maintainer: Jun Xiang <contact@ngjx.org>
    description: A local video manager.
    homepage: "https://github.com/caffeine-addictt/video-manager"
    license: MIT
    formats: [rpm, apk, termux.deb, deb, archlinux]
    dependencies: [git]

brews:
  - homepage: "https://github.com/caffeine-addictt/video-manager"
    license: "MIT"
    skip_upload: auto
    directory: Formula
    repository:
      owner: caffeine-addictt
      name: homebrew-tap
      branch: main
      token: "{{ .Env.GITHUB_TOKEN }}"
      pull_request:
        enabled: true
        draft: true
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    description: "CLI tool for downloading and managing videos"

release:
  ids: [default]
  draft: true
  replace_existing_draft: true
  target_commitish: "{{ .Commit }}"
  prerelease: auto
  mode: replace
  skip_upload: false

checksum:
  name_template: "checksums.txt"

changelog:
  use: github
  sort: asc
  abbrev: 0
  filters:
    exclude:
      - "^ci"
      - "^doc"
      - "^test"
      - "^chore"
      - " (T|t)ypo "
      - "^Merge pull request"
  groups:
    - title: Features
      regexp: '^.*?feat(\(.+\))??!?:.+$'
      order: 0
    - title: Bug fixes
      regexp: '^.*?fix(\(.+\))??!?:.+$'
      order: 1
    - title: Improvements
      regexp: '^.*?(perf|refactor)(\(.+\))??!?:.+$'
      order: 2
    - title: Security issues
      regexp: ^.*?(S|s)ecurity.*?$
      order: 4
    - title: Others
      order: 999
